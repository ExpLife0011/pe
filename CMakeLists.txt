CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

PROJECT(pe)

IF(WIN32)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} /MTd")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} /MT")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "$ENV{CXXFLAGS} /MT /Zi")
ELSE(WIN32)
ADD_DEFINITIONS(-fshort-wchar)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -g -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")
ENDIF(WIN32)

#util
IF (NOT util_SOURCE_DIR)
ADD_SUBDIRECTORY(util EXCLUDE_FROM_ALL)
ENDIF (NOT util_SOURCE_DIR)
INCLUDE_DIRECTORIES("${util_SOURCE_DIR}")
LINK_DIRECTORIES("${util_BINARY_DIR}")

SET(SRC_LIST
pe.cpp
slist.cpp)

#static library
ADD_LIBRARY(pe_static STATIC ${SRC_LIST})
SET_TARGET_PROPERTIES(pe_static PROPERTIES OUTPUT_NAME "pe" PREFIX "lib")
SET_TARGET_PROPERTIES(pe_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)

#dynamic library
ADD_LIBRARY(pe_dynamic SHARED ${SRC_LIST})
SET_TARGET_PROPERTIES(pe_dynamic PROPERTIES OUTPUT_NAME "pe")
SET_TARGET_PROPERTIES(pe_dynamic PROPERTIES CLEAN_DIRECT_OUTPUT 1)
SET_TARGET_PROPERTIES(pe_dynamic PROPERTIES VERSION 0.3 SOVERSION 1)
ADD_DEPENDENCIES(pe_dynamic
	util_static)

#tool 
SET(TOOL_SRC_LIST
petool.cpp)

ADD_EXECUTABLE(petool ${TOOL_SRC_LIST})
TARGET_LINK_LIBRARIES(petool pe_static)
TARGET_LINK_LIBRARIES(petool util_static)

#install
INSTALL(TARGETS pe_static pe_dynamic
	ARCHIVE DESTINATION lib
	LIBRARY DESTINATION bin
	RUNTIME DESTINATION bin)
INSTALL(FILES pe.h DESTINATION include)
INSTALL(FILES imgfmt.h DESTINATION include)	
INSTALL(FILES poppack.h DESTINATION include)
INSTALL(FILES pshpack1.h DESTINATION include)
INSTALL(FILES pshpack2.h DESTINATION include)
INSTALL(FILES pshpack4.h DESTINATION include)
INSTALL(FILES pshpack8.h DESTINATION include)
INSTALL(TARGETS petool RUNTIME DESTINATION bin)




