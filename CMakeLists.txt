CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)
PROJECT(pe)

#CONFIGURE_FILE(peConfig.cmake.in "${CMAKE_SOURCE_DIR}/peConfig.cmake")

#util
IF (NOT TARGET util)
	ADD_SUBDIRECTORY(util)
ENDIF ()
INCLUDE_DIRECTORIES("${util_SOURCE_DIR}")
LINK_DIRECTORIES("${util_BINARY_DIR}")

IF (NOT TARGET struct)
	ADD_SUBDIRECTORY(struct)
ENDIF ()
INCLUDE_DIRECTORIES("${struct_SOURCE_DIR}")
LINK_DIRECTORIES("${struct_BINARY_DIR}")

SET(SRC_LIST
pe.cpp)

#static library
ADD_LIBRARY(pe STATIC ${SRC_LIST})
SET_TARGET_PROPERTIES(pe PROPERTIES OUTPUT_NAME "pe")
SET_TARGET_PROPERTIES(pe PROPERTIES CLEAN_DIRECT_OUTPUT 1)
TARGET_LINK_LIBRARIES(pe struct)
ADD_DEPENDENCIES(pe struct)

#tool 
SET(TOOL_SRC_LIST
petool.cpp)

ADD_EXECUTABLE(petool ${TOOL_SRC_LIST})
TARGET_LINK_LIBRARIES(petool pe)
TARGET_LINK_LIBRARIES(petool util)
TARGET_LINK_LIBRARIES(petool struct)
ADD_DEPENDENCIES(petool pe struct)

#install
INSTALL(TARGETS pe
	ARCHIVE DESTINATION lib)
#install(EXPORT pelib DESTINATION "pelib")
INSTALL(FILES pe.h DESTINATION include)
INSTALL(FILES peformat.h DESTINATION include)	
INSTALL(TARGETS petool RUNTIME DESTINATION bin)






